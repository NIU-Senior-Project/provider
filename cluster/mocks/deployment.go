// Code generated by mockery 2.12.1. DO NOT EDIT.

package mocks

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"

	v1beta3 "github.com/akash-network/akash-api/go/node/market/v1beta3"

	v2beta2 "github.com/akash-network/akash-api/go/manifest/v2beta2"
)

// Deployment is an autogenerated mock type for the Deployment type
type Deployment struct {
	mock.Mock
}

// LeaseID provides a mock function with given fields:
func (_m *Deployment) LeaseID() v1beta3.LeaseID {
	ret := _m.Called()

	var r0 v1beta3.LeaseID
	if rf, ok := ret.Get(0).(func() v1beta3.LeaseID); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(v1beta3.LeaseID)
	}

	return r0
}

// ManifestGroup provides a mock function with given fields:
func (_m *Deployment) ManifestGroup() v2beta2.Group {
	ret := _m.Called()

	var r0 v2beta2.Group
	if rf, ok := ret.Get(0).(func() v2beta2.Group); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(v2beta2.Group)
	}

	return r0
}

// NewDeployment creates a new instance of Deployment. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewDeployment(t testing.TB) *Deployment {
	mock := &Deployment{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
