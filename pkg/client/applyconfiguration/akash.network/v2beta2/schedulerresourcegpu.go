/*
Copyright The Akash Network Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2beta2

// SchedulerResourceGPUApplyConfiguration represents a declarative configuration of the SchedulerResourceGPU type for use
// with apply.
type SchedulerResourceGPUApplyConfiguration struct {
	Vendor     *string `json:"vendor,omitempty"`
	Model      *string `json:"model,omitempty"`
	MemorySize *string `json:"memory_size,omitempty"`
	Interface  *string `json:"interface,omitempty"`
}

// SchedulerResourceGPUApplyConfiguration constructs a declarative configuration of the SchedulerResourceGPU type for use with
// apply.
func SchedulerResourceGPU() *SchedulerResourceGPUApplyConfiguration {
	return &SchedulerResourceGPUApplyConfiguration{}
}

// WithVendor sets the Vendor field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Vendor field is set to the value of the last call.
func (b *SchedulerResourceGPUApplyConfiguration) WithVendor(value string) *SchedulerResourceGPUApplyConfiguration {
	b.Vendor = &value
	return b
}

// WithModel sets the Model field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Model field is set to the value of the last call.
func (b *SchedulerResourceGPUApplyConfiguration) WithModel(value string) *SchedulerResourceGPUApplyConfiguration {
	b.Model = &value
	return b
}

// WithMemorySize sets the MemorySize field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MemorySize field is set to the value of the last call.
func (b *SchedulerResourceGPUApplyConfiguration) WithMemorySize(value string) *SchedulerResourceGPUApplyConfiguration {
	b.MemorySize = &value
	return b
}

// WithInterface sets the Interface field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Interface field is set to the value of the last call.
func (b *SchedulerResourceGPUApplyConfiguration) WithInterface(value string) *SchedulerResourceGPUApplyConfiguration {
	b.Interface = &value
	return b
}
